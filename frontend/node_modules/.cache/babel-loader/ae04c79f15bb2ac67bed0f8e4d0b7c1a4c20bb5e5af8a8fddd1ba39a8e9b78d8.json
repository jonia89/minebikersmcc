{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joni\\\\Code\\\\minebikersmcc\\\\frontend\\\\src\\\\Mobile\\\\MobileNavButton.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"./MobileNavBar.css\";\nimport dropdownIcon from \"./dropdownicon.jpeg\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MobileNavButton(props) {\n  _s();\n  const [activeMenu, setActiveMenu] = useState(JSON.parse(localStorage.getItem(\"activeMenu\")) || false);\n  useEffect(() => {\n    localStorage.setItem(\"activeMenu\", JSON.stringify(activeMenu));\n  });\n  const [siteView, setSiteView] = useState(JSON.parse(localStorage.getItem(\"siteView\")) || props.sites[0].title);\n  useEffect(() => {\n    localStorage.setItem(\"siteView\", JSON.stringify(siteView));\n  }, [siteView]);\n  function openMenu() {\n    if (activeMenu === false) {\n      setActiveMenu(true);\n    } else {\n      setActiveMenu(false);\n    }\n  }\n  function handleButtonClick(event) {\n    setActiveMenu(false);\n    setSiteView(event.target.value);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: activeMenu === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.sites.map(currentSite => {\n        return /*#__PURE__*/_jsxDEV(Link, {\n          to: currentSite.url,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"mobile-navbutton\",\n            type: \"button\",\n            value: currentSite.title,\n            onClick: handleButtonClick,\n            children: currentSite.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this)\n        }, currentSite.title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"mobile-navbutton\",\n      type: \"button\",\n      onClick: openMenu,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [siteView, /*#__PURE__*/_jsxDEV(\"img\", {\n          src: dropdownIcon,\n          alt: \"dropdown icon\",\n          style: {\n            marginLeft: \"8px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(MobileNavButton, \"hQwnkm+ZWUqEMs9Y/zke8Uy6Afg=\");\n_c = MobileNavButton;\nvar _c;\n$RefreshReg$(_c, \"MobileNavButton\");","map":{"version":3,"names":["useEffect","useState","dropdownIcon","Link","jsxDEV","_jsxDEV","MobileNavButton","props","_s","activeMenu","setActiveMenu","JSON","parse","localStorage","getItem","setItem","stringify","siteView","setSiteView","sites","title","openMenu","handleButtonClick","event","target","value","children","map","currentSite","to","url","className","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","display","src","alt","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/Joni/Code/minebikersmcc/frontend/src/Mobile/MobileNavButton.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport \"./MobileNavBar.css\";\r\nimport dropdownIcon from \"./dropdownicon.jpeg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function MobileNavButton(props) {\r\n  const [activeMenu, setActiveMenu] = useState(\r\n    JSON.parse(localStorage.getItem(\"activeMenu\")) || false\r\n  );\r\n  useEffect(() => {\r\n    localStorage.setItem(\"activeMenu\", JSON.stringify(activeMenu));\r\n  });\r\n\r\n  const [siteView, setSiteView] = useState(\r\n    JSON.parse(localStorage.getItem(\"siteView\")) || props.sites[0].title\r\n  );\r\n  useEffect(() => {\r\n    localStorage.setItem(\"siteView\", JSON.stringify(siteView));\r\n  }, [siteView]);\r\n\r\n  function openMenu() {\r\n    if (activeMenu === false) {\r\n      setActiveMenu(true);\r\n    } else {\r\n      setActiveMenu(false);\r\n    }\r\n  }\r\n\r\n  function handleButtonClick(event) {\r\n    setActiveMenu(false);\r\n    setSiteView(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {activeMenu === true ? (\r\n        <div>\r\n          {props.sites.map((currentSite) => {\r\n            return (\r\n              <Link to={currentSite.url} key={currentSite.title}>\r\n                <button\r\n                  className=\"mobile-navbutton\"\r\n                  type=\"button\"\r\n                  value={currentSite.title}\r\n                  onClick={handleButtonClick}\r\n                >\r\n                  {currentSite.title}\r\n                </button>\r\n              </Link>\r\n            );\r\n          })}\r\n        </div>\r\n      ) : (\r\n        <button className=\"mobile-navbutton\" type=\"button\" onClick={openMenu}>\r\n          <div style={{ display: \"flex\" }}>\r\n            {siteView}\r\n            <img\r\n              src={dropdownIcon}\r\n              alt=\"dropdown icon\"\r\n              style={{ marginLeft: \"8px\" }}\r\n            />\r\n          </div>\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}